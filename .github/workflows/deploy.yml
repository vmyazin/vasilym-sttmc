#########################################
#########################################

## RPECK 31/10/2022 - Statamic Push    ##

#########################################
#########################################

## Name ##
name: Statamic (Production)

## Triggers ##
on:
  push:
    branches: ["master", "staging", "test"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

# Jobs
jobs:

  # Push
  push:
  
    # Name
    name: Push To Server
  
    # OS
    runs-on: ubuntu-latest
    
    # ENV Vars
    env:
     BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
    
    # Steps
    steps:
    
      # Target (Production)
      - name: Set Target (Default)
        run: |
          echo "TARGET=${{ secrets.TARGET }}" >> $GITHUB_ENV
          
      # Target (Staging)
      - name: Set Target (Staging)
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "TARGET=${{ secrets.TARGET_STAGING }}" >> $GITHUB_ENV
          
      # Run GIT on server
      - name: Reload NGinx
        uses: appleboy/ssh-action@master
        with:
          host:        ${{ secrets.HOST }}
          username:    ${{ secrets.USERNAME }}
          port:        ${{ secrets.PORT }}
          key:         ${{ secrets.KEY }}
          passphrase:  ${{ secrets.PASSPHRASE }}
          script_stop: true
          script: |
            sudo chown -R $USER:www-data ${{ env.TARGET }}
            sudo chmod -R g+swrx ${{ env.TARGET }}
            cd ${{ env.TARGET }}
            sudo rm -Rf node_modules vendor
            
            git init
            
            if ! git config remote.origin.url >/dev/null; then
              git remote add origin git@github.com:${{ github.repository }}.git
            fi
            
            if git config remote.origin.url >/dev/null; then
              git remote set-url origin git@github.com:${{ github.repository }}.git
            fi
            
            git fetch
            
            if ! git show-ref -q --heads ${{ env.BRANCH_NAME }}; then
              git branch --track ${{ env.BRANCH_NAME }} origin/${{ env.BRANCH_NAME }}
            fi
            
            git checkout ${{ env.BRANCH_NAME }}
            git reset HEAD --hard
            
            if ! test -f ".env"; then
              touch .env
              echo "APP_KEY=" >> .env
              echo "STATAMIC_GIT_ENABLED=true" >> .env
              echo "STATAMIC_GIT_PUSH=true" >> .env
              echo "STATAMIC_GIT_AUTOMATIC=true" >> .env
              echo "STATAMIC_GIT_USERNAME='Vasily Myazin (Statamic)'" >> .env
              echo "STATAMIC_GIT_EMAIL=vm@konspiredesign.com" >> .env
              echo "STATAMIC_LICENSE_KEY=q1v2z7podg5r4l0x" >> .env
            fi
            
            composer install
            npm install
            npm run prod
            
            php artisan key:generate
            
            php please stache:clear
            php artisan config:clear
            
            sudo find . -type f -exec chmod 664 {} \;   
            sudo find . -type d -exec chmod 755 {} \;
            sudo find . -type d -exec chmod g+s {} \;
            sudo chmod -R ug+srwx storage bootstrap/cache
            sudo chmod -R g+swrx ${{ env.TARGET }}
